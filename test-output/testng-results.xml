<?xml version="1.0" encoding="UTF-8"?>
<testng-results ignored="0" total="18" passed="12" failed="6" skipped="0">
  <reporter-output>
  </reporter-output>
  <suite started-at="2025-08-16T23:06:12 TRT" name="FakeStoreAPITestSuite" finished-at="2025-08-16T23:06:19 TRT" duration-ms="7532">
    <groups>
    </groups>
    <test started-at="2025-08-16T23:06:12 TRT" name="API Tests" finished-at="2025-08-16T23:06:19 TRT" duration-ms="7532">
      <class name="qa.fakestore.tests.CartTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:qa.fakestore.tests.CartTests@ba54932]" started-at="2025-08-16T23:06:12 TRT" name="setUp" finished-at="2025-08-16T23:06:12 TRT" duration-ms="585" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:qa.fakestore.tests.CartTests@ba54932]" started-at="2025-08-16T23:06:13 TRT" name="setUpRequest" finished-at="2025-08-16T23:06:13 TRT" duration-ms="204" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method signature="testGetAllCarts()[pri:1, instance:qa.fakestore.tests.CartTests@ba54932]" started-at="2025-08-16T23:06:13 TRT" name="testGetAllCarts" finished-at="2025-08-16T23:06:15 TRT" duration-ms="1745" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllCarts -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:qa.fakestore.tests.CartTests@ba54932]" started-at="2025-08-16T23:06:15 TRT" name="setUpRequest" finished-at="2025-08-16T23:06:15 TRT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method signature="testAddNewCart()[pri:2, instance:qa.fakestore.tests.CartTests@ba54932]" started-at="2025-08-16T23:06:15 TRT" name="testAddNewCart" finished-at="2025-08-16T23:06:15 TRT" duration-ms="349" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <201>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <201>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.CallSiteArray.defaultCallConstructor(CallSiteArray.java:57)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:263)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$4.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$6.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at qa.fakestore.base.BaseTest.validateSuccessResponse(BaseTest.java:42)
at qa.fakestore.tests.CartTests.testAddNewCart(CartTests.java:63)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNewCart -->
      </class> <!-- qa.fakestore.tests.CartTests -->
      <class name="qa.fakestore.tests.ProductAPITests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:qa.fakestore.tests.ProductAPITests@50caa560]" started-at="2025-08-16T23:06:12 TRT" name="setUp" finished-at="2025-08-16T23:06:12 TRT" duration-ms="585" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:qa.fakestore.tests.ProductAPITests@50caa560]" started-at="2025-08-16T23:06:13 TRT" name="setUpRequest" finished-at="2025-08-16T23:06:13 TRT" duration-ms="203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method signature="testGetAllProducts()[pri:1, instance:qa.fakestore.tests.ProductAPITests@50caa560]" started-at="2025-08-16T23:06:13 TRT" name="testGetAllProducts" finished-at="2025-08-16T23:06:15 TRT" duration-ms="2166" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetAllProducts -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:qa.fakestore.tests.ProductAPITests@50caa560]" started-at="2025-08-16T23:06:15 TRT" name="setUpRequest" finished-at="2025-08-16T23:06:15 TRT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method signature="testGetSingleProduct()[pri:2, instance:qa.fakestore.tests.ProductAPITests@50caa560]" started-at="2025-08-16T23:06:15 TRT" name="testGetSingleProduct" finished-at="2025-08-16T23:06:15 TRT" duration-ms="229" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetSingleProduct -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:qa.fakestore.tests.ProductAPITests@50caa560]" started-at="2025-08-16T23:06:15 TRT" name="setUpRequest" finished-at="2025-08-16T23:06:15 TRT" duration-ms="3" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method signature="testGetCategories()[pri:3, instance:qa.fakestore.tests.ProductAPITests@50caa560]" started-at="2025-08-16T23:06:15 TRT" name="testGetCategories" finished-at="2025-08-16T23:06:16 TRT" duration-ms="306" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetCategories -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:qa.fakestore.tests.ProductAPITests@50caa560]" started-at="2025-08-16T23:06:16 TRT" name="setUpRequest" finished-at="2025-08-16T23:06:16 TRT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method signature="testGetProductsByCategory(java.lang.String)[pri:4, instance:qa.fakestore.tests.ProductAPITests@50caa560]" started-at="2025-08-16T23:06:16 TRT" name="testGetProductsByCategory" data-provider="categoryData" finished-at="2025-08-16T23:06:16 TRT" duration-ms="392" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[electronics]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetProductsByCategory -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:qa.fakestore.tests.ProductAPITests@50caa560]" started-at="2025-08-16T23:06:16 TRT" name="setUpRequest" finished-at="2025-08-16T23:06:16 TRT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method signature="testGetProductsByCategory(java.lang.String)[pri:4, instance:qa.fakestore.tests.ProductAPITests@50caa560]" started-at="2025-08-16T23:06:16 TRT" name="testGetProductsByCategory" data-provider="categoryData" finished-at="2025-08-16T23:06:16 TRT" duration-ms="323" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[jewelery]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetProductsByCategory -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:qa.fakestore.tests.ProductAPITests@50caa560]" started-at="2025-08-16T23:06:16 TRT" name="setUpRequest" finished-at="2025-08-16T23:06:16 TRT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method signature="testGetProductsByCategory(java.lang.String)[pri:4, instance:qa.fakestore.tests.ProductAPITests@50caa560]" started-at="2025-08-16T23:06:16 TRT" name="testGetProductsByCategory" data-provider="categoryData" finished-at="2025-08-16T23:06:17 TRT" duration-ms="320" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[men's clothing]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetProductsByCategory -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:qa.fakestore.tests.ProductAPITests@50caa560]" started-at="2025-08-16T23:06:17 TRT" name="setUpRequest" finished-at="2025-08-16T23:06:17 TRT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method signature="testGetProductsByCategory(java.lang.String)[pri:4, instance:qa.fakestore.tests.ProductAPITests@50caa560]" started-at="2025-08-16T23:06:17 TRT" name="testGetProductsByCategory" data-provider="categoryData" finished-at="2025-08-16T23:06:17 TRT" duration-ms="390" status="PASS">
          <params>
            <param index="0">
              <value>
                <![CDATA[women's clothing]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetProductsByCategory -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:qa.fakestore.tests.ProductAPITests@50caa560]" started-at="2025-08-16T23:06:17 TRT" name="setUpRequest" finished-at="2025-08-16T23:06:17 TRT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method signature="testAddNewProduct()[pri:5, instance:qa.fakestore.tests.ProductAPITests@50caa560]" started-at="2025-08-16T23:06:17 TRT" name="testAddNewProduct" finished-at="2025-08-16T23:06:17 TRT" duration-ms="302" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[1 expectation failed.
Expected status code <200> but was <201>.
]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: 1 expectation failed.
Expected status code <200> but was <201>.

at java.base/jdk.internal.reflect.DirectConstructorHandleAccessor.newInstance(DirectConstructorHandleAccessor.java:67)
at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:500)
at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:484)
at org.codehaus.groovy.reflection.CachedConstructor.invoke(CachedConstructor.java:73)
at org.codehaus.groovy.runtime.callsite.ConstructorSite$ConstructorSiteNoUnwrapNoCoerce.callConstructor(ConstructorSite.java:108)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callConstructor(AbstractCallSite.java:277)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure.validate(ResponseSpecificationImpl.groovy:512)
at io.restassured.internal.ResponseSpecificationImpl$HamcrestAssertionClosure$validate$4.call(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.validateResponseIfRequired(ResponseSpecificationImpl.groovy:696)
at io.restassured.internal.ResponseSpecificationImpl.this$2$validateResponseIfRequired(ResponseSpecificationImpl.groovy)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.codehaus.groovy.runtime.callsite.PlainObjectMetaMethodSite.doInvoke(PlainObjectMetaMethodSite.java:43)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite$PogoCachedMethodSiteNoUnwrapNoCoerce.invoke(PogoMetaMethodSite.java:198)
at org.codehaus.groovy.runtime.callsite.PogoMetaMethodSite.callCurrent(PogoMetaMethodSite.java:62)
at org.codehaus.groovy.runtime.callsite.AbstractCallSite.callCurrent(AbstractCallSite.java:185)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:135)
at io.restassured.specification.ResponseSpecification$statusCode$6.callCurrent(Unknown Source)
at io.restassured.internal.ResponseSpecificationImpl.statusCode(ResponseSpecificationImpl.groovy:143)
at io.restassured.internal.ValidatableResponseOptionsImpl.statusCode(ValidatableResponseOptionsImpl.java:89)
at qa.fakestore.base.BaseTest.validateSuccessResponse(BaseTest.java:42)
at qa.fakestore.tests.ProductAPITests.testAddNewProduct(ProductAPITests.java:126)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAddNewProduct -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:qa.fakestore.tests.ProductAPITests@50caa560]" started-at="2025-08-16T23:06:17 TRT" name="setUpRequest" finished-at="2025-08-16T23:06:17 TRT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method signature="testUpdateProduct()[pri:6, instance:qa.fakestore.tests.ProductAPITests@50caa560]" started-at="2025-08-16T23:06:17 TRT" name="testUpdateProduct" finished-at="2025-08-16T23:06:18 TRT" duration-ms="227" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testUpdateProduct -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:qa.fakestore.tests.ProductAPITests@50caa560]" started-at="2025-08-16T23:06:18 TRT" name="setUpRequest" finished-at="2025-08-16T23:06:18 TRT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method signature="testDeleteProduct()[pri:7, instance:qa.fakestore.tests.ProductAPITests@50caa560]" started-at="2025-08-16T23:06:18 TRT" name="testDeleteProduct" finished-at="2025-08-16T23:06:18 TRT" duration-ms="329" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testDeleteProduct -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:qa.fakestore.tests.ProductAPITests@50caa560]" started-at="2025-08-16T23:06:18 TRT" name="setUpRequest" finished-at="2025-08-16T23:06:18 TRT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method signature="testGetNonExistentProduct()[pri:8, instance:qa.fakestore.tests.ProductAPITests@50caa560]" started-at="2025-08-16T23:06:18 TRT" name="testGetNonExistentProduct" finished-at="2025-08-16T23:06:18 TRT" duration-ms="224" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Response should be null for non-existent product expected [null] but found []]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Response should be null for non-existent product expected [null] but found []
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:656)
at qa.fakestore.tests.ProductAPITests.testGetNonExistentProduct(ProductAPITests.java:193)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testGetNonExistentProduct -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:qa.fakestore.tests.ProductAPITests@50caa560]" started-at="2025-08-16T23:06:18 TRT" name="setUpRequest" finished-at="2025-08-16T23:06:18 TRT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method signature="testProductDataIntegrity()[pri:9, instance:qa.fakestore.tests.ProductAPITests@50caa560]" started-at="2025-08-16T23:06:18 TRT" name="testProductDataIntegrity" finished-at="2025-08-16T23:06:18 TRT" duration-ms="228" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testProductDataIntegrity -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:qa.fakestore.tests.ProductAPITests@50caa560]" started-at="2025-08-16T23:06:18 TRT" name="setUpRequest" finished-at="2025-08-16T23:06:18 TRT" duration-ms="1" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method signature="testAPIPerformance()[pri:10, instance:qa.fakestore.tests.ProductAPITests@50caa560]" started-at="2025-08-16T23:06:18 TRT" name="testAPIPerformance" finished-at="2025-08-16T23:06:19 TRT" duration-ms="1061" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testAPIPerformance -->
      </class> <!-- qa.fakestore.tests.ProductAPITests -->
      <class name="qa.fakestore.tests.AuthenticationTests">
        <test-method is-config="true" signature="setUp()[pri:0, instance:qa.fakestore.tests.AuthenticationTests@574b560f]" started-at="2025-08-16T23:06:12 TRT" name="setUp" finished-at="2025-08-16T23:06:12 TRT" duration-ms="585" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUp -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:qa.fakestore.tests.AuthenticationTests@574b560f]" started-at="2025-08-16T23:06:13 TRT" name="setUpRequest" finished-at="2025-08-16T23:06:13 TRT" duration-ms="203" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method signature="testValidLogin()[pri:1, instance:qa.fakestore.tests.AuthenticationTests@574b560f]" started-at="2025-08-16T23:06:13 TRT" name="testValidLogin" finished-at="2025-08-16T23:06:15 TRT" duration-ms="1757" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Status code should be 200 expected [200] but found [201]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Status code should be 200 expected [200] but found [201]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1419)
at org.testng.Assert.assertEquals(Assert.java:1383)
at qa.fakestore.tests.AuthenticationTests.testValidLogin(AuthenticationTests.java:29)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testValidLogin -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:qa.fakestore.tests.AuthenticationTests@574b560f]" started-at="2025-08-16T23:06:15 TRT" name="setUpRequest" finished-at="2025-08-16T23:06:15 TRT" duration-ms="2" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method signature="testInvalidLogin()[pri:2, instance:qa.fakestore.tests.AuthenticationTests@574b560f]" started-at="2025-08-16T23:06:15 TRT" name="testInvalidLogin" finished-at="2025-08-16T23:06:15 TRT" duration-ms="634" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Status code should be 200 expected [200] but found [401]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Status code should be 200 expected [200] but found [401]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1419)
at org.testng.Assert.assertEquals(Assert.java:1383)
at qa.fakestore.tests.AuthenticationTests.testInvalidLogin(AuthenticationTests.java:65)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testInvalidLogin -->
        <test-method is-config="true" signature="setUpRequest()[pri:0, instance:qa.fakestore.tests.AuthenticationTests@574b560f]" started-at="2025-08-16T23:06:15 TRT" name="setUpRequest" finished-at="2025-08-16T23:06:15 TRT" duration-ms="6" status="PASS">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- setUpRequest -->
        <test-method signature="testEmptyCredentials()[pri:3, instance:qa.fakestore.tests.AuthenticationTests@574b560f]" started-at="2025-08-16T23:06:15 TRT" name="testEmptyCredentials" finished-at="2025-08-16T23:06:15 TRT" duration-ms="227" status="FAIL">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[Status code should be 200 expected [200] but found [400]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: Status code should be 200 expected [200] but found [400]
at org.testng.Assert.fail(Assert.java:111)
at org.testng.Assert.failNotEquals(Assert.java:1578)
at org.testng.Assert.assertEqualsImpl(Assert.java:150)
at org.testng.Assert.assertEquals(Assert.java:132)
at org.testng.Assert.assertEquals(Assert.java:1419)
at org.testng.Assert.assertEquals(Assert.java:1383)
at qa.fakestore.tests.AuthenticationTests.testEmptyCredentials(AuthenticationTests.java:96)
at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:104)
at java.base/java.lang.reflect.Method.invoke(Method.java:578)
at org.testng.internal.invokers.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:139)
at org.testng.internal.invokers.TestInvoker.invokeMethod(TestInvoker.java:664)
at org.testng.internal.invokers.TestInvoker.invokeTestMethod(TestInvoker.java:227)
at org.testng.internal.invokers.MethodRunner.runInSequence(MethodRunner.java:50)
at org.testng.internal.invokers.TestInvoker$MethodInvocationAgent.invoke(TestInvoker.java:957)
at org.testng.internal.invokers.TestInvoker.invokeTestMethods(TestInvoker.java:200)
at org.testng.internal.invokers.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:148)
at org.testng.internal.invokers.TestMethodWorker.run(TestMethodWorker.java:128)
at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
at java.base/java.lang.Thread.run(Thread.java:1623)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testEmptyCredentials -->
      </class> <!-- qa.fakestore.tests.AuthenticationTests -->
    </test> <!-- API Tests -->
  </suite> <!-- FakeStoreAPITestSuite -->
</testng-results>
